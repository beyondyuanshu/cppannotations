In bf(C) the following i(basic data types) are available: tt(void, char,
short, int, long, float) and tt(double). bf(C++) extends these basic
types with several new types: the types ti(bool), ti(wchar_t), ti(long long)
and ti(long double) (Cf. i(ANSI/ISO) draft (1995), par. 27.6.2.4.1 for
examples of these very long types).  The type ti(long long) is merely a
double-long tt(long) datatype. The type ti(long double) is merely a
double-long tt(double) datatype. Apart from these basic types a standard type
tt(string) is available. The datatypes tt(bool), and tt(wchar_t) are covered
in the following sections, the datatype tt(string) is covered in chapter
ref(String).

Now that these new types are introduced, let's refresh your
memory about em(letters) that can be used in emi(literal constants) of various
    hi(letters in literal constants)
types. They are:
    itemization(
    it() tt(E) or tt(e): hi(literal floating point value using E) the
emi(exponentiation) character in floating point literal values. For example:
tt(1.23E+3). Here, tt(E) should be pronounced (and iterpreted) as: em(times 10
to the power). Therefore, tt(1.23E+3) represents the value tt(1230).
    it() tt(F) hi(literal float using F) can be used as em(postfix) to a
non-integral numerical constant to indicate a value of type tt(float), rather
than tt(double), which is the default. For example: tt(12.F) (the dot
transforms 12 into a floating point value); tt(1.23E+3F) (see the previous
example. tt(1.23E+3) is a tt(double) value, whereas tt(1.23E+3F) is a
tt(float) value).
    it() tt(L) hi(literal wchar_t string L) can be used as em(prefix) to
indicate a character string whose elements are tt(wchar_t)-type
characters. For example: tt(L"hello world").
    it() tt(L) hi(literal long int using L) can be used as em(postfix) to an
integral value to indicate a value of type tt(long), rather than tt(int),
which is the default. Note that there is no letter indicating a tt(short)
type. For that a tt(static_cast<short>()) must be used.
    it() tt(U) hi(literal unsigned using U) can be used as em(postfix) to an
integral value to indicate an tt(unsigned)  value, rather than an tt(int).
It may also be combined with the postfix tt(L) to produce an tt(unsigned long
int) value.
    )
