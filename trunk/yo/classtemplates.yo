INCLUDEFILE(mailus)

includefile(classtemplates/intro)

lsect(TEMPCLASSDEF)(Defining class templates)
includefile(classtemplates/definitions)

    subsect(Default class template parameters)
    includefile(classtemplates/default)

    lsubsect(DECLCLASSTEMP)(Declaring class templates)
    includefile(classtemplates/declaring)

    subsect(Preventing template instantiations (C++0x))
    includefile(classtemplates/externtemplate)

    subsect(Non-type parameters)
    includefile(classtemplates/nontype)

    lsubsect(MEMTEMP)(Member templates)
    includefile(classtemplates/membertemplates)

sect(Static data members)
includefile(classtemplates/static)

lsubsect(DISTINGUISH)(Extended use of the keyword `typename')
includefile(classtemplates/typename)

sect(Specializing class templates for deviating types)
includefile(classtemplates/specialization)

lsect(PARTIAL)(Partial specializations)
includefile(classtemplates/partial)

lsect(VARIADIC)(Variadic templates (C++0x))
includefile(classtemplates/variadic)

    lsubsect(DEFVARTEMP)(Defining and using variadic templates (C++0x))
    includefile(classtemplates/defining)

    lsubsect(PERFECT)(Perfect forwarding (C++0x))
    includefile(classtemplates/perfect)

    lsubsect(UNPACK)(The unpack operator (C++0x))
    includefile(classtemplates/unpack)

    subsect(Computing the return type of function objects (C++0x))
    includefile(classtemplates/returntype)

    lsubsect(TUPLES)(Tuples (C++0x))
    includefile(classtemplates/tuples)

    subsect(User-defined literals (C++0x, ?))
    includefile(classtemplates/userdefined)

sect(Template typedefs and `using' declarations (C++0x, ?))
includefile(classtemplates/templatetypedefs)

sect(Instantiating class templates)
includefile(classtemplates/instantiations)

sect(Processing class templates and instantiations)
includefile(classtemplates/nameresolution)

lsect(TEMPFRIENDS)(Declaring friends)
includefile(classtemplates/friends)

    subsect(Non-function templates or classes as friends)
    includefile(classtemplates/normalfriends)

    subsect(Templates instantiated for specific types as friends)
    includefile(classtemplates/boundfriends)

    subsect(Unbound templates as friends)
    includefile(classtemplates/unboundfriends)

lsect(DERIVEDTEMPCLASS)(Class template derivation)
includefile(classtemplates/derived)

    subsect(Deriving ordinary classes from class templates)
    includefile(classtemplates/template2concrete)

    subsect(Deriving class templates from class templates)
    includefile(classtemplates/template2template)

    lsubsect(TFROMC)(Deriving class templates from ordinary classes)
    includefile(classtemplates/concrete2template)

sect(Class templates and nesting)
includefile(classtemplates/nesting)

lsect(ITERATORCONS)(Constructing iterators)
includefile(classtemplates/iteratorcons)

    lsubsect(RANDOMIT)(Implementing a `RandomAccessIterator')
    includefile(classtemplates/randomiterator)

    lsubsect(REVERSEIT)(Implementing a `reverse_iterator')
    includefile(classtemplates/reverseiterator)
