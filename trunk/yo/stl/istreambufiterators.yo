Input iterators are also available for ti(streambuf) objects.
Before ti(istreambuf_iterators) can be used the following preprocessor
directive must have been specified: hi(#include <iterator>)
        verb(
    #include <iterator>
        )
    The ti(istreambuf_iterator) is available for reading from tt(streambuf)
objects supporting i(input operations). The standard operations
that are available for ti(istream_iterator) objects are also available
for tt(istreambuf_iterators). There are three hi(constructor) constructors:
    itemization(
    ithtq(istreambuf_iterator<>())
        (istreambuf_iterator<Type>())
        (This constructor represents the i(end-of-stream) iterator while
extracting values of type tt(Type) from the tt(streambuf).)
    ittq(istreambuf_iterator<Type>(istream))
        (This constructor constructs an tt(istreambuf_iterator) accessing
the tt(streambuf) of the ti(istream) object, used as  the
constructor's argument.)
    ittq(istreambuf_iterator<Type>(streambuf *))
        (This constructor constructs an tt(istreambuf_iterator) accessing
the tt(streambuf) whose address is used as the constructor's argument.)
    )
    In section ref(OSTREAMBUFITER) an example is given using both
tt(istreambuf_iterators) and hi(ostreambuf_iterator) tt(ostreambuf_iterators).
