Before an ti(ostreambuf_iterator)  can be used the following preprocessor
directive must have been specified: hi(#include <iterator>)
        verb(
    #include <iterator>
        )
    The ti(ostreambuf_iterator) is available for writing to tt(streambuf)
objects supporting i(output operations). The standard operations
that are  available for ti(ostream_iterator) objects are also available
for tt(ostreambuf_iterators). There are two hi(constructor)
constructors:
    itemization(
    ithtq(ostreambuf_iterator<>())
        (ostreambuf_iterator<Type>(ostream))
        (This constructor constructs an tt(ostreambuf_iterator) accessing
the tt(streambuf) of the ti(ostream) object, used as the
constructor's argument, to insert values of type tt(Type).)
    ittq(ostreambuf_iterator<Type>(streambuf *))
        (This constructor constructs an tt(ostreambuf_iterator) accessing
the tt(streambuf) whose address is used as the constructor's argument.)
    )
    Here is an example using both hi(istreambuf_iterator)
tt(istreambuf_iterators) and an tt(ostreambuf_iterator), showing yet another
way to copy a stream:
        verbinclude(stl/examples/streambufiter.cc)
