There are three ways to hi(auto_ptr: defining) define tt(auto_ptr)
objects. Each definition contains the usual tt(<type>) specifier between
angle brackets. Concrete examples are given in the coming sections, but an
overview of the various possibilities is presented here:
    itemization(
    it() The basic form initializes an tt(auto_ptr) object to point to a block
of memory allocated by the tt(new) operator:
        verb(
    auto_ptr<type> identifier (new-expression);
        )
    This form is discussed in section ref(AUTONEW).
    it() Another form initializes an tt(auto_ptr) object using a copy
constructor:
        verb(
    auto_ptr<type> identifier(another auto_ptr for type);
        )
    This form is discussed in section ref(AUTOOTHER).
    it() The third form simply creates an tt(auto_ptr) object that
does not point to a particular block of memory:
        verb(
    auto_ptr<type> identifier;
        )
    This form is discussed in section ref(AUTOPLAIN).
    )
