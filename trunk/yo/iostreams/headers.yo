    Several i(header files) are defined for the iostream library. Depending on
the situation at hand, the following header files should be used:
    itemization(
    iti(#include <iosfwd>): sources should use this i(preprocessor directive)
if a forward declaration is required for the iostream classes. For example,
if a function defines a reference parameter to an tt(ostream) then, when this
function itself is declared, there is no need for the compiler to know exactly
what an tt(ostream) is. In the header file declaring such a function the
tt(ostream) class merely needs to be be declared. One cannot use
    verb(
    class ostream;      // erroneous declaration

    void someFunction(ostream &str);
    )
    but, instead, one should use:
    verb(
    #include <iosfwd>   // correctly declares class ostream

    void someFunction(ostream &str);
    )
    iti(#include <streambuf>): sources should use this preprocessor directive
when using tt(streambuf) or ti(filebuf) classes. See sections ref(STREAMBUF)
and ref(FILEBUF).
    iti(#include <istream>): sources should use this preprocessor directive
when using the class tt(istream) or when using classes that do both input and
output.  See section ref(ISTREAM).
    iti(#include <ostream>): sources should use this i(preprocessor) directive
when using the class ti(ostream) class or when using classes that do both
input and output.  See section ref(OSTREAM).
    iti(#include <iostream>): sources should use this preprocessor directive
when using the global stream objects (like ti(cin) and ti(cout)).
    iti(#include <fstream>): sources  should use this preprocessor directive
when using the file stream classes.   See sections ref(IFSTREAM),
ref(OFSTREAM) and ref(FSTREAM).
    iti(#include <sstream>): sources should use this preprocessor directive
when using the string stream classes. See sections ref(OSTRINGSTREAM) and
ref(ISTRINGSTREAM).
    iti(#include <iomanip>): sources  should use this preprocessor directive
when using parameterized manipulators. See section ref(MANIPULATORS)
    )
