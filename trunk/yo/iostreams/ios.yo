The ti(ios) class was derived directly from ti(ios_base), and it defines em(de
facto) the foundation for all stream classes of the bf(C++) I/O library.

Although it em(is) possible to construct an tt(ios) object
directly, this is hardly ever done. The purpose of the class tt(ios) is to
provide the facilities of the class tt(basic_ios), and to add several new
facilites, all related to managing the tt(streambuf) object which is managed
by objects of the class tt(ios).

All other stream classes are either directly or indirectly derived from
tt(ios). This implies, as explained in chapter ref(INHERITANCE), that all
facilities offered by the classes tt(ios) and tt(ios_base) are also available
in other stream classes. Before discussing these additional stream classes,
the facilities offered by the class tt(ios) (and by implication: by
tt(ios_base)) are now introduced.

The class tt(ios) offers several member functions, most of which are related
to i(formatting). Other frequently used member functions are:
    itemization(
    ithtq(ios::rdbuf())
        (streambuf *ios::rdbuf())
        (This member function returns a pointer to the ti(streambuf) object
        forming the interface between the tt(ios) object and the i(device)
        with which the tt(ios) object communicates. See section
        ref(STRBUF) for further information about the tt(class
        streambuf).)
    itt(streambuf *ios::rdbuf(streambuf *new)):
        quote(This member function can be used to associate a tt(ios)
        object with another tt(streambuf) object. A pointer to the
        tt(ios) object's original tt(streambuf) object is returned. The object
        to which this pointer points is not destroyed when the tt(stream)
        object goes out of scope, but is owned by the caller of
        tt(rdbuf()).)
    ithtq(ios::tie())
        (ostream *ios::tie())
        (This member function returns a pointer to the ti(ostream) object that
        is currently tied to the tt(ios) object (see the next member). The
        returned tt(ostream) object is
        em(flushed) every time before information is input or output to the
        tt(ios) object of which the tt(tie()) member is called. The return
        value 0 indicates that currently no tt(ostream) object is tied to
        the tt(ios) object. See section ref(COUPLING) for details.)
    itt(ostream *ios::tie(ostream *new)):
        quote(This member function can be used to associate an tt(ios)
        object with another tt(ostream) object. A pointer to the
        tt(ios) object's original tt(ostream) object is returned.
        See section ref(COUPLING) for details.)
    )
