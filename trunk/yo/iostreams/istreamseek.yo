Although not every tt(istream) object supports i(repositioning), some do. This
means that it is possible to read the same section of a stream
repeatedly. Repositioning is frequently used in emi(database applications)
where it must be possible to access the information in the database randomly.

The following members are available:
    itemization(
        itht(istream::tellg())(pos_type istream::tellg()):
            quote(this function returns the current (absolute) position where
the next read-operation to the stream will take place. For all practical
purposes a ti(pos_type) can be considered to be an tt(unsigned long).)
        ithtq(istream::seekg())
        (istream &istream::seekg(off_type step, ios::seekdir org))
            (This member function can be used to reposition the
stream. The function expects an ti(off_type) tt(step), the stepsize in bytes
to go from tt(org). For all practical purposes a tt(pos_type) can be
considered to be a tt(long).
    The origin of the step, tt(org) is a ti(ios::seekdir) value. Possible
values are:
        itemization(
        iti(ios::beg):
            quote(tt(org) is interpreted as the stepsize relative to the
beginning of the stream. If tt(org) is not specified, tt(ios::beg) is
used. )
        iti(ios::cur):
            quote(tt(org) is interpreted as the stepsize relative to the
current position (as returned by tt(tellg()) of the stream).)
        iti(ios::end):
            quote(tt(org) is interpreted as the stepsize relative to the
current end position of the the stream.)
    )
    While it is ok to i(seek beyond end of file), reading at that point
will of course fail.  It is em(not) allowed to i(seek before begin of file).
Seeking before tt(ios::beg) will cause the ti(ios::fail) flag to be set.
        )
    )
