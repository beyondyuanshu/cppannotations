In the previous sections the definition and some of the features of typelists
have been discussed. Most bf(C++) programmers consider typelists both
exciting and an intellectual chalenge, honing their skills in the area of
recursive programming.

Fortunately, there's more to typelist than a mere intellectual challenge. In
this section of the chapter on Advanced Template Applications the following
topics will be covered:
    itemization(
    it() Creating classes from a typelist nl() Here the aim is to construct a
        new class consisting of instantiations of an existing basic template
        for each of the types mentined in a provided typelist;
    it() Accessing data members from the thus constructed conglomerate class
        by index, rather than name;
    it() ti(Tuples), defining tt(struct)s from typelists, having
        index-accessible data members for each of the types specified in a
        typelist.
    )

Again, much (and more) of the materials covered below is found in
        hi(Alexandrescu, A.)
    Alexandrescu's (2001) book.  Hopefully the current section is an tasty
appetizer for the main courses offered by Andrei Alexandrescu.
