Let us take another look at the implementation of the function
tt(Person::name()):
        verb(
    std::string const &Person::name() const
    {
        return d_name;
    }
        )
    This function is used to retrieve the name field of an object of the class
tt(Person). In a code fragment like:
        verb(
    Person frank("Frank", "Oostumerweg 17", "403 2223");

    cout << frank.name();
        )
    the following actions take place:
    itemization(
    it() The function tt(Person::name()) is called.
    it() This function returns the tt(name) of the object tt(frank) as a
reference.
    it() The referenced name is inserted into tt(cout).
    )

Especially the first part of these actions results in some time loss, since an
extra function call is necessary to retrieve the value of the tt(name) field.
Sometimes a faster procedure may be desirable, in which the tt(name) field
becomes immediately available, without ever actually calling a function
tt(name()). This can be realized using ti(inline) functions.
