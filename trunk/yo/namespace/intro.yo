Imagine a math teacher who wants to develop an interactive math program. For
this program functions like tt(cos(), sin(), tan()) etc. are to be used
accepting arguments in degrees rather than arguments in
radians. Unfortunately, the functionname tt(cos()) is already in use, and that
function accepts radians as its arguments, rather than degrees.

Problems like these are usually solved by defining another name, e.g., the
function name tt(cosDegrees()) is defined. bf(C++) offers an alternative
solution: by allowing us to use emi(namespaces). Namespaces can be considered
as areas or regions in the code in which identifiers are defined which
normally won't conflict with names already defined elsewhere.

Now that the i(ANSI/ISO) standard has been implemented to a large degree in
recent compilers, the use of namespaces is more strictly enforced than in
previous versions of compilers. This has certain consequences for the setup of
ti(class) i(header files). At this point in the Annotations this cannot be
discussed in detail, but in section ref(NAMESPACEHDR) the construction of
header files using entities from namespaces is discussed.
