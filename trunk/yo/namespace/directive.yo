A generalized alternative to the tt(using)-declaration is the
emi(using-directive):
        verb(
    using namespace CppAnnotations;
        )
    Following this directive, em(all) entities defined in the
tt(CppAnnotations) namespace are used as if they where declared by tt(using)
declarations.

    While the tt(using)-directive is a quick way to i(import all the names) of
the tt(CppAnnotations) namespace (assuming the entities are declared or
defined separately from the directive), it is at the same time a somewhat
dirty way to do so, as it is less clear which entity will be used in a
particular block of code.

    If, e.g., tt(cos()) is defined in the tt(CppAnnotations) namespace, the
function tt(CppAnnotations::cos()) will be used when tt(cos()) is called in
the code. However, if tt(cos()) is em(not) defined in the tt(CppAnnotations)
namespace, the standard tt(cos()) function will be used. The tt(using)
directive does not document as clearly which entity will be used as the
tt(using) declaration does. For this reason, the tt(using) directive is
somewhat deprecated.
