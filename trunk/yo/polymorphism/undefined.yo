Occasionaly, the linker will generate an error like the following:
 hi(undefined reference to vtable) hi(vtable: undefined reference)
        verb(
    In function `Derived::Derived()':
        : undefined reference to `vtable for Derived'
        )
    This error is generated when a virtual function's implementation is
missing in a derived class, but the function is mentioned in the derived
class's interface.

    Such a situation is easily encountered:
    itemization(
    it() Construct a (complete) base class defining a virtual member function;
    it() Construct a Derived class mentioning the virtual function in its
        interface;
    it() The Derived class's virtual function is not implemented. Of course,
the compiler doesn't know that the derived class's function is not implemented
and will, when asked, generate code to create a derived class object;
    it() Eventually, the linker is unable to find the derived class's virtual
member function. Therefore, it is unable to construct the derived class's
vtable;
    it() The linker complains with the message:
        verb(
    undefined reference to `vtable for Derived'
        )
    )
    Here is an example producing the error:
        verbinclude(polymorphism/examples/vtable.cc)
    It's of course easy to correct the error: implement the derived class's
missing virtual member function.
