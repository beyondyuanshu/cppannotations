INCLUDEFILE(mailus)

COMMENT(The Template Concept)
includefile(functiontemplates/intro)

lsect(TEMPFUNDEF)(Defining function templates)
includefile(functiontemplates/definitions)

    subsect(Late-specified return type (C++0x, 4.4))
    includefile(functiontemplates/alternate)

sect(Passing arguments by reference (reference wrappers) (C++0x))
includefile(functiontemplates/referencewrappers)

lsect(TEMPFUNARGS)(Template parameter deduction)
includefile(functiontemplates/argumentdeduction)

    subsect(Lvalue transformations)
    includefile(functiontemplates/lvalue)

    subsect(Qualification transformations)
    includefile(functiontemplates/qualifications)

    subsect(Transformation to a base class)
    includefile(functiontemplates/baseclass)

    lsubsect(PARDEDUCT)(The template parameter deduction algorithm)
    includefile(functiontemplates/algorithm)

    lsubsect(CONTRACTIONS)(Template type contractions)
    includefile(functiontemplates/contractions)

lsect(TEMPFUNDECL)(Declaring function templates)
includefile(functiontemplates/declarations)

    lsubsect(TEMPFUNEXDEC)(Instantiation declarations)
    includefile(functiontemplates/instantdecl)

lsect(TEMPFUNINST)(Instantiating function templates)
includefile(functiontemplates/instantiations)

lsect(TEMPFUNEXPLICIT)(Using explicit template types)
includefile(functiontemplates/explicit)

sect(Overloading function templates)
includefile(functiontemplates/overloading)

lsect(SPECIALIZING)(Specializing templates for deviating types)
includefile(functiontemplates/specialization)

lsect(FUNCTIONSELECTION)(The function selection mechanism)
includefile(functiontemplates/selection)

sect(SFINAE: Substitution Failure Is Not An Error)
includefile(functiontemplates/sfinae)

lsect(NAMERESFUN)(Compiling template definitions and instantiations)
includefile(functiontemplates/nameresolution)

lsect(STATICASSERT)(Static assertions (C++0x))
includefile(functiontemplates/staticassertions)

sect(Summary of the template declaration syntax)
includefile(functiontemplates/summary)
