        See section ref(ITERATORS) for details about em(iterators). As a quick
introduction to iterators: an iterator acts like a pointer, and pointers can
often be used in situations where iterators are requested. Iterators almost
always come in pairs: the begin-iterator points to the first entity that will
be considered, the end-iterator points just beyond the last entity that will
be considered. Iterators play an important role in the context of em(generic
algorithms) (cf. chapter ref(STL)).
        itemization(
        it() Forward iterators are returned by the members:
            itemization(
            it() ti(string::begin()), pointing to the first character inside
the string object.
            it() ti(string::end()), pointing beyond the last character
inside the string object.
            )
        it() Reverse iterators are also iterators, but they are used to step
through a range in a reversed direction. Reverse iterators
are returned by the members:
            itemization(
            it() ti(string::rbegin()), which can be considered to be an
iterator pointing to the last character inside the string object.
            it() ti(string::rend()), which can be considered to be an iterator
pointing before the first character inside the string object.
            )
        )
