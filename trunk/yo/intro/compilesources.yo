In general, the following command is used to compile a bf(C++) source file
`tt(source.cc)':
        centt(g++ source.cc)
    This produces a binary program (tt(a.out) or tt(a.exe)). If the default
name is not wanted, the name of the executable can be specified using the
tt(-o) flag (here producing the program tt(source)):
        centt(g++ -o source source.cc)
    If a mere compilation is required, the compiled module can be generated
using the tt(-c) flag:
        centt(g++ -c source.cc)
    This produces the file tt(source.o), which can be linked to other modules
later on.

Using the hi(icmake)
    turl(icmake)(ftp://ftp.rug.nl/contrib/frank/software/linux/icmake)
    program a maintenance script can be used to assist in the construction and
maintenance of bf(C++) programs. A generic tt(icmake) maintenance script
(ti(icmbuild)) is available as well. Alternatively, the standard ti(make)
program can be used to maintain bf(C++) programs. It is strongly advised to
start using maintenance scripts or programs early in the study of the bf(C++)
programming language. Alternative approaches were implemented by former
students, e.g., turl(lake)(http://nl.logilogi.org/MetaLogi/LaKe) by Wybo
Wiersma and turl(ccbuild)(http://ccbuild.sourceforge.net/) by Bram Neijt.
